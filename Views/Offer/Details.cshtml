@model Paris2024.Models.Offer

@{
    ViewData["Title"] = "Details";
}


<div class="text-capitalize text-center pb-2">
    <h1>Detail Billet sélectionné</h1>
</div>


<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Type d'offre
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OfferType.OfferType_Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Offer_Code)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Offer_Code)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Offer_Sport)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Offer_Sport)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Offer_Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Offer_Description)
        </dd>
            <dt class = "col-sm-2">
           Prix unitaire
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Offer_UnitPrice)
        </dd>

    </dl>
</div>
<div class="m-5">
    <button type="button" onclick="add(@Model.OfferId)" class="btn btn-outline-dark justify-content-center mx-auto">Ajouter au panier</button>

</div>

<div>
    <a asp-action="Index">Retour liste des billets disponibles</a>
</div>

@section Scripts {
    <script>

        async function add(offerId) {
            try {
                var response = await fetch(`/Cart/AddItem?offerId=${offerId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
}